@page "/posts-radzen"
@using ClienteBlazorWASM.Modelos;
@using ClienteBlazorWASM.Pages.Shared
@using ClienteBlazorWASM.Servicios.IServicio;
@using Microsoft.AspNetCore.Authorization
@inject IPostsServicio postsServicio
@inject IJSRuntime JsRuntime
@attribute [Authorize]



<h1 class="text-center">Lista de Posts</h1>

<RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="3" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
                Data="@Posts" TItem="Post" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or" SelectionMode="DataGridSelectionMode.Single" >
    <Columns>
        <RadzenDataGridColumn TItem="Post" Property="Id" Filterable="false" Title="Id" Frozen="true" Width="40px" TextAlign="TextAlign.Center" />
        <RadzenDataGridColumn TItem="Post" Property="Titulo" Title="Título" Width="200px" />
        <RadzenDataGridColumn TItem="Post" Property="Descripcion" Title="Descripción" Width="200px" />
        <RadzenDataGridColumn TItem="Post" Property="Etiquetas" Title="Etiquetas" Width="140px" />

        <RadzenDataGridColumn TItem="Post" Title="Imagen" Width="80px" >
            <Template Context="data">
                <RadzenImage Path="@data.RutaImagen" class="rz-gravatar"/>
            </Template>
        </RadzenDataGridColumn>
        
        <RadzenDataGridColumn TItem="Post" Property="FechaCreacion" Title="Fecha Creación" Width="150px" />
        <RadzenDataGridColumn TItem="Post" Property="FechaActualizacion" Title="Fecha Actualización" Width="150px" />

        <RadzenDataGridColumn TItem="Post" Property="Id">
            <Template Context="data">
                <NavLink href="@($"editar-post/{data.Id}")" class="btn btn-sm btn-outline-success"><i class="bi bi-gear-fill"></i>&nbsp; Editar</NavLink>
                            <button class="btn btn-sm btn-outline-danger" @onclick="()=>ManejadorOnBorrar(data.Id)"><i class="bi bi-trash-fill"></i>&nbsp; Borrar</button>
            </Template>
        </RadzenDataGridColumn>

    </Columns>
</RadzenDataGrid>

<ConfirmacionBorrado ProcesandoComponentePadre="estaProcesando" CambioConfirmacion="Click_Confirmar_Borrado"></ConfirmacionBorrado>

@code {
    public IEnumerable<Post> Posts { get; set; } = new List<Post>();
    //Par la parte de borrar
    private bool estaProcesando { get; set; } = false;
    private int? BorrarIdPost { get; set; } = null;

    protected override async Task OnInitializedAsync()
    {
        Posts = await postsServicio.GetPosts();
    }

    public async Task ManejadorOnBorrar(int postId)
    {
        BorrarIdPost = postId;
        await JsRuntime.InvokeVoidAsync("MostrarModalConfirmacionBorrado");
    }

    public async Task Click_Confirmar_Borrado(bool confirmado)
    {
        estaProcesando = true;
        if (confirmado && BorrarIdPost != null)
        {
            // Post post = await postsServicio.GetPost(BorrarIdPost.Value);
            await postsServicio.EliminarPost(BorrarIdPost.Value);
            await JsRuntime.ToastrSuccess("Post borrado correctamente");
            Posts = await postsServicio.GetPosts();
        }

        await JsRuntime.InvokeVoidAsync("OcultarModalConfirmacionBorrado");
        estaProcesando = false;
    }
}
